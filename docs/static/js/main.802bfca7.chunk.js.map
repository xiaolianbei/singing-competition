{"version":3,"sources":["@history/history.js","app/AppContext.js","app/main/errors/404.js","app/main/auth/auth.js","app/main/home/loginMutation.js","app/main/home/HomeView.js","app/main/home/HomeController.js","app/main/list/BootstrapDialogTitle.js","app/main/list/updateMutation.js","app/main/list/View.js","app/main/list/ListController.js","app/main/logout/index.js","app/main/MainConfigs.js","app/configs/RoutesConfig.js","app/layout/Layout.js","app/utils/MongodbGraphQLClient.js","app/App.js","store/index.js","serviceWorker.js","index.js"],"names":["history","AppContext","React","createContext","error404","className","useAuthToken","useCookies","cookies","setCookie","removeCookie","authToken","useLogout","removeAuthToken","apolloClient","useApolloClient","a","clearStore","window","location","href","loginMutationGQL","gql","HomeView","props","warning","toast","error","clearWaitingQueue","useHistory","setAuthToken","removeAuthtoken","useMutation","onCompleted","data","login","push","token","mutation","email","code","variables","useLoginMutation","loginMutation","loginMutationResults","useForm","shouldUseNativeValidation","handleSubmit","register","disableForm","loading","class","id","limit","data-aos","data-aos-delay","onSubmit","values","replaceState","document","title","type","name","placeholder","required","disabled","HomeController","isWarning","URLSearchParams","useLocation","search","get","BootstrapDialogTitle","children","onClose","other","DialogTitle","sx","m","p","IconButton","aria-label","onClick","position","right","top","color","theme","palette","grey","View","logout","vote","input","useUpdateMutation","updateVote","BootstrapDialog","styled","Dialog","padding","spacing","useState","votes","setVotes","open","setOpen","disableSubmit","setDisableSubmit","useEffect","db_vote","songLists","map","song","rank","_id","singer","handleDialogClose","handleRankingChange","r","parseInt","Number","isInteger","isValideVote","isExist","i","length","columns","selector","row","target","min","max","defaultValue","onChange","event","value","aria-labelledby","DialogContent","style","v","key","DialogActions","Button","autoFocus","access_token","duplicate","isVotesDuplicate","progressPending","GET_SONG_LIST","Logout","Config","settings","layout","routes","path","component","home","useQuery","appsConfigs","exact","homePage","to","Layout","Consumer","renderRoutes","app","Realm","getValidAccessToken","currentUser","logIn","anonymous","refreshCustomData","accessToken","client","ApolloClient","link","HttpLink","uri","fetch","options","headers","Authorization","cache","InMemoryCache","App","Provider","loggerMiddleware","createLogger","store","createStore","applyMiddleware","ReduxThunk","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.802bfca7.chunk.js","sourcesContent":["import * as history from 'history';\n\nexport default history.createBrowserHistory();\n\n\n//https://github.com/ReactTraining/history/blob/master/docs/GettingStarted.md","import React from 'react';\n\nconst AppContext = React.createContext({});\n\nexport default AppContext;\n","import React from 'react';\n\nfunction error404() {\n  return (\n    <div className=\"App\">\n      <p>Page No Found</p>\n    </div>\n  );\n}\n\nexport default error404;\n","import { useApolloClient } from \"@apollo/react-hooks\";\nimport { useCookies } from \"react-cookie\";\n\n\nconst TOKEN_NAME = \"authToken\";\n\n// custom hook to handle authToken - we use compositon to decouple the auth system and it's storage\nexport const useAuthToken = () => {\n  const [cookies, setCookie, removeCookie] = useCookies([TOKEN_NAME]);\n  const setAuthToken = (authToken) => setCookie(TOKEN_NAME, authToken);\n  const removeAuthToken = () => removeCookie(TOKEN_NAME);\n  return [cookies[TOKEN_NAME], setAuthToken, removeAuthToken];\n};\n\nexport const useLogout = () => {\n  const [, , removeAuthToken] = useAuthToken();\n  const apolloClient = useApolloClient();\n\n  const logout = async () => {\n    await apolloClient.clearStore(); // we remove all information in the store\n    removeAuthToken();\n    window.location.href = './#/logout';\n  };\n  return logout;\n};","import React from 'react';\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useAuthToken } from \"../auth/auth\";\nimport { useHistory } from 'react-router-dom';\nimport View from \"./HomeView\"\n\n\nexport const loginMutationGQL = gql`\n  mutation login($email: String!, $code: String!) {\n    login(input: { email: $email,code:$code }) {\n      token\n    }\n  }\n`;\n\nexport const useLoginMutation = () => {\n  \n  let history = useHistory();\n\n  const [_, setAuthToken, removeAuthtoken] = useAuthToken();\n\n  const [mutation, mutationResults] = useMutation(loginMutationGQL, {\n    onCompleted: (data) => {\n      if(data.login!==null){\n        setAuthToken(data.login.token);\n        let path = `/list`;\n        history.push(path);\n        return\n      }else{\n       let path = `/?warning`;\n        history.push(path);\n        return\n      }\n    },\n  });\n\n  // full login function\n  const login = (email, code) => {\n    removeAuthtoken();\n    return mutation({\n      variables: {\n        email: email,\n        code: code,\n      },\n    });\n  }\n  return [login, mutationResults]\n};","import React,{useState,useEffect} from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useLoginMutation } from \"./loginMutation\";\nimport { ToastContainer, toast } from 'react-toastify';\n\nfunction HomeView(props) {\n  \n  if(props.warning) {\n      toast.error(\"The Email or Code you entered does not match our records. Please try again or contact xiaolianbei@gmail.com for help\")\n      toast.clearWaitingQueue();\n  }\n\n const [loginMutation, loginMutationResults] = useLoginMutation();\n\n const { handleSubmit, register } = useForm({ shouldUseNativeValidation: true });\n\n const disableForm = loginMutationResults.loading;\n\n const onSubmit = (values) => {\n  // replace current parm in url\n  window.history.replaceState({}, document.title, \"/\" );\n  loginMutation(values.email, values.code);\n }\n\n  return (\n  \t  <section class=\"hero d-flex flex-column justify-content-center align-items-center\" id=\"home\">\n            <ToastContainer limit={1} />\n            <div class=\"bg-overlay\"></div>\n               <div class=\"container\">\n                    <div class=\"row\">\n                         <div class=\"col-lg-8 col-md-10 mx-auto col-12\">\n                              <div class=\"hero-text mt-5 text-center\">\n\n                                    <h6 data-aos=\"fade-up\" data-aos-delay=\"300\">Welcome to NAAAC-North America Alumni Alliance Cup Singing Competition Voting System</h6>\n                                    <h1 class=\"text-white\" data-aos=\"fade-up\" data-aos-delay=\"500\">NAAAC</h1>\n                              <form  onSubmit={handleSubmit(onSubmit)}>\n                              <input type=\"email\" class=\"form-control\" name=\"cf-name\" placeholder=\"Email\"   {...register(\"email\",{ required: \"Please enter your email.\" })}  />\n                              <input type=\"text\" class=\"form-control\" name=\"cf-email\" placeholder=\"Code\"  {...register(\"code\",{ required: \"Please enter your code.\" })} />\n                              <button disabled={disableForm} type=\"submit\" class=\"form-control\" id=\"submit-button\" name=\"submit\">Sign in </button>\n                            </form>\n                              </div>\n                             \n                         </div>\n\n                    </div>\n               </div>\n               <footer class=\"site-footer\">\n          <div class=\"container\">\n               <div class=\"row\">\n                    <div class=\"ml-auto col-lg-12 col-md-12\">\n                        <p class=\"copyright-text\">\n                          If you have any questions, please contact xiaolianbei@gmail.com.\n                        </p>\n                    </div>\n                    <div class=\"ml-auto col-lg-12 col-md-12\">\n                        <p class=\"copyright-text\">\n                        Copyright &copy; 2022 North America Alumni Alliance Cup. Design By Y&L Solution &#9994; Photos on Unsplash\n                        </p>\n                    </div>\n               </div>\n          </div>\n     </footer>\n     </section>\n     \n  );\n}\n\nexport default HomeView;\n","import React from \"react\";\nimport {  useLocation} from \"react-router-dom\";\nimport View from \"./HomeView\"\n\nfunction HomeController(props) {\n\tlet query = new URLSearchParams(useLocation().search);\n\tlet isWarning =  query.get(\"warning\") === null\n  return  <View warning={!isWarning}/>\n}\nexport default HomeController;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Typography from '@mui/material/Typography';\n\n\n\nconst BootstrapDialogTitle = (props) => {\n  const { children, onClose, ...other } = props;\n\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\n      {children}\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          onClick={onClose}\n          sx={{\n            position: 'absolute',\n            right: 8,\n            top: 8,\n            color: (theme) => theme.palette.grey[500],\n          }}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </DialogTitle>\n  );\n};\n\nexport default BootstrapDialogTitle;\n","import React from 'react';\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { useLogout } from \"../auth/auth\";\n\nexport const loginMutationGQL = gql`\n  mutation updateVote($input: [SongInputInsertInput]) {\n    updateVote(input:$input) {\n      output\n    }\n  }\n`;\n\nexport const useUpdateMutation = () => {\n\n  const  logout= useLogout();\n\n  const [mutation,mutationResults] = useMutation(loginMutationGQL, {\n    onCompleted: (data) => {\n      logout();\n      return true;\n    },\n  });\n  // full login function\n  const updateVote = (vote) => {\n    return mutation({\n      variables: {\n        input: vote\n      },\n    });\n  }\n  return [updateVote,mutationResults]\n};","import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { styled } from '@mui/material/styles';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport { ToastContainer, toast } from 'react-toastify';\nimport PlayCircleFilledWhiteIcon from '@mui/icons-material/PlayCircleFilledWhite';\nimport 'react-toastify/dist/ReactToastify.css';\nimport BootstrapDialogTitle from './BootstrapDialogTitle';\nimport { useUpdateMutation } from \"./updateMutation\";\nimport { useLogout } from \"../auth/auth\";\n\n\n\nfunction View(props) {\n\n\nconst [updateVote, mutationResults] = useUpdateMutation();\nconst logout = useLogout();\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst [votes, setVotes] = useState([]);\nconst [open, setOpen] = React.useState(false);\nconst [voteSummary, setVoteSummary] =React.useState();\nconst [disableSubmit, setDisableSubmit] = React.useState(false);\n\nuseEffect(() => {\n  let db_vote = []\n  if(props.data){\n    props.data.songLists.map(song=>{\n    if(song.rank!==0 && song.rank !== \"\"){\n      db_vote.push({ _id:song._id,  rank : song.rank , song: song.singer });\n    }\n  })\n  setVotes(db_vote);\n  }\n  \n},[props.data])\n\nconst handleDialogOpen = () => {\n    setOpen(true);\n  };\nconst handleDialogClose = () => {\n    setOpen(false);\n  };\n\n\nconst handleConfirm=()=>{\n  setOpen(false);\n  let input = [];\n  votes.map(vote=>{\n    input.push({ \n      _id:vote._id,  \n      rank : vote.rank , \n      song: vote.song, \n      access_token: props.token\n    })\n  })\n  updateVote(input);\n  //logout();\n};\n\nconst onCancel=()=>{\n  logout();\n}\nconst isVotesDuplicate= ()=>{\n  let duplicate = false;\n  let rank = [1,1,1,1,1,1,1]\n  \n   // check duplicate\n  for (var i = votes.length-1; i >= 0; i--) {\n    if(parseInt(votes[i].rank) !==0 ){\n     if(rank[parseInt(votes[i].rank)]==0){\n        duplicate = true;\n     }else{\n      rank[parseInt(votes[i].rank)] = 0;\n     }\n    }\n  }\n  return duplicate;\n}\n\n\nconst isValideVote =(r)=>{\n  const rank = parseInt(r);\n  // integer check\n  if(!Number.isInteger(rank)){\n    toast(\"Please enter integer number !\")\n    return false;\n  }\n  // range check\n  if(rank<0 || rank >6){\n    toast(\"Please enter integer number within a rang (1-6) !\")\n    return false;\n  }\n\n  return true;\n\n}\n\nconst handleRankingChange =(id,rank,name)=>{\n\n  if(!isValideVote(rank)) return;\n  const vote = { _id: id, rank : rank , song : name } ;\n  // update the rank if vote exists\n  let isExist = false;\n  for (var i = votes.length-1; i >= 0; i--) {\n    if(votes[i]._id == id){\n      votes[i]=vote ;\n      isExist = true;\n    }\n  }\n\n  // add new vote \n  if(!isExist){\n    votes.push(vote )\n  }\n  setVotes(votes);\n}\n\n\n\n\nconst onSubmit= ()=>{\n  if(isVotesDuplicate()){\n     setDisableSubmit(true);\n  }else{\n    setDisableSubmit(false);\n  }\n  handleDialogOpen();\n \n}\n\nconst columns = [\n  {\n    name: 'Name',\n    selector: row => row.singer,\n  },\n  {\n    name: 'Click to Listen',\n    selector: row => {\n      return <a\n        href={row.song}\n        target=\"external-url\"\n      >\n        <PlayCircleFilledWhiteIcon/>\n      </a>\n\n      },\n  },\n  {\n    name: 'Ranking',\n    selector: row => {\n      return  <input type=\"number\" min=\"0\" max=\"6\" class=\"form-control\" defaultValue={row.rank} name=\"cf-name\"  onChange={(event)=>handleRankingChange(row._id,event.target.value, row.singer)}/>\n    }\n  }\n  ]\n\nconst data = props.data?props.data.songLists: [];\n\n  return (\n  \t  <section class=\"hero-list d-flex flex-column justify-content-center align-items-center\">\n       <ToastContainer />\n      <BootstrapDialog\n        onClose={handleDialogClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleDialogClose}>\n          Ready to Submit\n        </BootstrapDialogTitle>\n        <DialogContent>\n          {!disableSubmit ? (<div>\n            Here is the summary, please review it. You can click confirm and submit button to save the voting.\n          </div>)\n           : <span style={{color:\"red\"}}> Found duplicate ranking number</span>}\n          <br/>\n          <ul>\n          {votes.map((v)=> (<li key={v.song}> {v.song}'s rank: {v.rank}  </li>))}\n          </ul>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleConfirm} disabled = {disableSubmit}>\n            Confirm and Submit\n          </Button>\n        </DialogActions>\n      </BootstrapDialog>\n\n            <div class=\"bg-overlay-list\"></div>\n               <div class=\"container\">\n                    <div class=\"row\">\n                         <div class=\"col-lg-10 col-md-10 mx-auto col-12\">\n                          <h3 class=\"text-white\" >Welcome to the NAAAC voting system</h3>\n                          <br/>\n                          <p class=\"text-white\">\n                             You have ten songs to vote for and rank's range is from 1 to 6 with 1 as the highest ranking.\n                             You are only be allowed to vote 6 out of 10 and each of the 6 songs shall have different rankings.\n                             By clicking Submit button, you can commit your voting after the confirm the summary. \n                             You are allowed to recast your votes after submit. \n                             Be aware that after --------, all the vots are final, not further submit will be saved. \n                          </p>\n                         </div>\n                    </div>\n                     <div class=\"row\">\n                      <div class=\"col-lg-5 col-md-5  col-5\"></div>\n                          <div class=\"col-lg-3 col-md-3 col-3\">\n                              <button type=\"button\" class=\"form-control\" id=\"submit-button\" onClick={onSubmit}>Submit my votes</button>\n                          </div>\n                          <div class=\"col-lg-3 col-md-3  col-3\">\n                                <button type=\"button\" class=\"form-control\" onClick={onCancel}>logout</button>\n                          </div>\n                    </div>\n                    <div class=\"row\">\n                         <div class=\"col-lg-10 col-md-10 mx-auto col-12\">\n\n                              <div class=\"mt-5 text-center\">\n                                 <DataTable\n                                      columns={columns}\n                                      data={data}\n                                      progressPending={props.loading} \n                                  />\n                              </div>\n                              \n                         </div>\n\n                    </div>\n               </div>\n     </section>\n  );\n}\n\nexport default View;\n","import React from \"react\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport View from \"./View\"\nimport HomeView from \"../home/HomeView\"\nimport { useAuthToken } from \"../auth/auth\";\n\nconst GET_SONG_LIST = gql`\nquery get_song_list($access_token: String!) {\n  songLists(query: {access_token: $access_token}) {\n    singer\n    song\n    rank\n    _id\n  }\n  }`;\n\nfunction ListController(props) {\n\n  // check access token is presented or not\n  const [token, setAuthToken, removeAuthtoken] = useAuthToken();\n  \n\n let { loading, error, data } = useQuery(GET_SONG_LIST,{\n\t    variables: { \n\t    \taccess_token: token,\n\t     },\n\t });\n\n if (error) return <HomeView warning/>;\n if (typeof(token) === 'undefined' || token === \"\") {\n \t\treturn <HomeView />;\n }\n return <View loading={loading} error={error}  data={ data } token={token} />\n}\nexport default ListController;","import React from 'react';\n\nfunction Logout(props) {\n\n  const onLogin =()=>{\n    window.location.href = '/';\n  }\n  return (\n  \t  <section class=\"hero d-flex flex-column justify-content-center align-items-center\" id=\"home\">\n            <div class=\"bg-overlay\"></div>\n               <div class=\"container\">\n                    <div class=\"row\">\n                         <div class=\"col-lg-8 col-md-10 mx-auto col-12\">\n                              <div class=\"hero-text mt-5 text-center\">\n                                    <h4 class=\"text-white\" >\n                                      Thank you for using NAAAC-North America Alumni Alliance Cup Singing Competition Voting System</h4>\n                                    <h4 class=\"text-white\" >Your votes is important to us !</h4>\n                                    <h4 class=\"text-white\" >We will contact you later ! Wish you have a nice day!</h4>\n                              </div>\n                               <div class=\"col-lg-3 col-md-3 mx-auto col-3\">\n                               <button  type=\"button\" onClick={onLogin} class=\"form-control\" id=\"submit-button\" name=\"submit\">Sign in to vote</button>\n                              </div>\n                             \n                         </div>\n\n                    </div>\n               </div>\n     </section>\n  );\n}\n\nexport default Logout;\n","import error404 from './errors/404';\nimport home from './home/HomeController';\nimport list from './list/ListController';\nimport Logout from './logout';\n\nconst Config = {\n\tsettings: {\n\t\tlayout: {}\n\t},\n\troutes: [\n\t\t{\n\t\t\tpath: '/home',\n\t\t\tcomponent: home\n\t\t},\n\t\t{\n\t\t\tpath: '/list',\n\t\t\tcomponent: list\n\t\t},\n\t\t{\n\t\t\tpath: '/logout',\n\t\t\tcomponent: Logout\n\t\t},\n\t\t{\n\t\t\tpath: '/errors/404',\n\t\t\tcomponent: error404\n\t\t}\n\t]\n};\n\nexport default Config;\n","import React from 'react';\nimport appsConfigs  from '../main/MainConfigs';\nimport { Redirect } from 'react-router-dom';\nimport homePage from '../main/home/HomeController';\n\nconst routes = [\n\t...appsConfigs.routes,\n\t{\n\t\tpath: '/',\n\t\texact: true,\n\t\tcomponent: homePage\n\t},\n\t{\n\t\tcomponent: () => <Redirect to=\"/errors/404\" />\n\t}\n];\n\nexport default routes;\n","import React from 'react';\nimport AppContext from '../AppContext';\nimport { renderRoutes} from 'react-router-config';\nimport {\n  HashRouter,\n} from \"react-router-dom\";\n\n\nfunction Layout(props) {\n  return (\n       <AppContext.Consumer>\n        {({ routes }) => (\n      <div >\n          <HashRouter>\n             {\n              renderRoutes(routes)\n             }\n              </HashRouter>\n      </div>\n        )}\n    </AppContext.Consumer>\n  );\n}\n\nexport default Layout;","import * as Realm from \"realm-web\";\nimport { ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\n\nexport const APP_ID = \"naaac-app-ugrsu\";\n\nconst graphqlUri = `https://us-west-2.aws.realm.mongodb.com/api/client/v2.0/app/naaac-app-ugrsu/graphql`\n// Local apps should use a local URI!\n// const graphqlUri = `https://us-east-1.aws.stitch.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`\n// const graphqlUri = `https://eu-west-1.aws.stitch.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`\n// const graphqlUri = `https://ap-southeast-1.aws.stitch.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`\n// Connect to your MongoDB Realm app\nconst app = new Realm.App(APP_ID);\n\n\n// Gets a valid Realm user access token to authenticate requests\nasync function getValidAccessToken() {\n  // Guarantee that there's a logged in user with a valid access token\n  if (!app.currentUser) {\n    // If no user is logged in, log in an anonymous user. The logged in user will have a valid\n    // access token.\n    await app.logIn(Realm.Credentials.anonymous());\n  } else {\n    // An already logged in user's access token might be stale. To guarantee that the token is\n    // valid, we refresh the user's custom data which also refreshes their access token.\n    await app.currentUser.refreshCustomData();\n  }\n  return app.currentUser.accessToken\n}\n\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: graphqlUri,\n    // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\n    // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\n    // access token before sending the request.\n    fetch: async (uri, options) => {\n      const accessToken = await getValidAccessToken();\n      options.headers.Authorization = `Bearer ${accessToken}`;\n      return fetch(uri, options);\n    },\n  }),\n  cache: new InMemoryCache(),\n});\n\nexport default client;","import history from '../@history';\nimport React from 'react';\nimport { Router } from 'react-router-dom';\nimport AppContext from './AppContext';\nimport routes from './configs/RoutesConfig';\nimport Layout from './layout/Layout';\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport client from './utils/MongodbGraphQLClient'\n\nconst App = () => {\n\treturn (\n\t<ApolloProvider client={client}>\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\troutes\n\t\t\t}}\n\t\t>\n\t\t\t<Router history={history}>\n\t\t\t\t\t<Layout />\n\t\t\t</Router>\n\t\t</AppContext.Provider>\n\t</ApolloProvider>\n\t)\n};\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n  applyMiddleware(ReduxThunk, loggerMiddleware),\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// Internet Explorer 11 requires polyfills and partially supported by this project.\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app/App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    \t<App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}